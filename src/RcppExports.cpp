// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// LA_ADMM_taglasso_export
Rcpp::List LA_ADMM_taglasso_export(const int& it_out, const int& it_in, const arma::mat& S, const arma::mat& W_sparsity, const arma::mat& A, const arma::mat& Atilde, const arma::mat& A_for_gamma, const arma::mat& A_for_B, const arma::mat& C, const arma::mat& C_for_D, const double& lambda1, const double& lambda2, const double& rho, const bool& pendiag, const arma::mat& init_om, const arma::mat& init_u1, const arma::mat& init_u2, const arma::mat& init_u3, const arma::mat& init_gam, const arma::mat& init_u4, const arma::mat& init_u5);
RcppExport SEXP _clusterglasso_LA_ADMM_taglasso_export(SEXP it_outSEXP, SEXP it_inSEXP, SEXP SSEXP, SEXP W_sparsitySEXP, SEXP ASEXP, SEXP AtildeSEXP, SEXP A_for_gammaSEXP, SEXP A_for_BSEXP, SEXP CSEXP, SEXP C_for_DSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP rhoSEXP, SEXP pendiagSEXP, SEXP init_omSEXP, SEXP init_u1SEXP, SEXP init_u2SEXP, SEXP init_u3SEXP, SEXP init_gamSEXP, SEXP init_u4SEXP, SEXP init_u5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type it_out(it_outSEXP);
    Rcpp::traits::input_parameter< const int& >::type it_in(it_inSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_sparsity(W_sparsitySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Atilde(AtildeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_gamma(A_for_gammaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_B(A_for_BSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_for_D(C_for_DSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type pendiag(pendiagSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_om(init_omSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u1(init_u1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u2(init_u2SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u3(init_u3SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_gam(init_gamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u4(init_u4SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u5(init_u5SEXP);
    rcpp_result_gen = Rcpp::wrap(LA_ADMM_taglasso_export(it_out, it_in, S, W_sparsity, A, Atilde, A_for_gamma, A_for_B, C, C_for_D, lambda1, lambda2, rho, pendiag, init_om, init_u1, init_u2, init_u3, init_gam, init_u4, init_u5));
    return rcpp_result_gen;
END_RCPP
}
// refit_LA_ADMM_export
Rcpp::List refit_LA_ADMM_export(const int& it_out, const int& it_in, const arma::mat& S, const arma::mat& A, const arma::mat& Atilde, const arma::mat& A_for_gamma, const arma::mat& A_for_B, const arma::mat& C, const arma::mat& C_for_D, const double& rho, const arma::mat& omP, const arma::mat& init_om, const arma::mat& init_u1, const arma::mat& init_u2, const arma::mat& init_u3, const arma::mat& init_gam, const arma::mat& init_u4, const arma::mat& init_u5);
RcppExport SEXP _clusterglasso_refit_LA_ADMM_export(SEXP it_outSEXP, SEXP it_inSEXP, SEXP SSEXP, SEXP ASEXP, SEXP AtildeSEXP, SEXP A_for_gammaSEXP, SEXP A_for_BSEXP, SEXP CSEXP, SEXP C_for_DSEXP, SEXP rhoSEXP, SEXP omPSEXP, SEXP init_omSEXP, SEXP init_u1SEXP, SEXP init_u2SEXP, SEXP init_u3SEXP, SEXP init_gamSEXP, SEXP init_u4SEXP, SEXP init_u5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type it_out(it_outSEXP);
    Rcpp::traits::input_parameter< const int& >::type it_in(it_inSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Atilde(AtildeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_gamma(A_for_gammaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_B(A_for_BSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_for_D(C_for_DSEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type omP(omPSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_om(init_omSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u1(init_u1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u2(init_u2SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u3(init_u3SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_gam(init_gamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u4(init_u4SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u5(init_u5SEXP);
    rcpp_result_gen = Rcpp::wrap(refit_LA_ADMM_export(it_out, it_in, S, A, Atilde, A_for_gamma, A_for_B, C, C_for_D, rho, omP, init_om, init_u1, init_u2, init_u3, init_gam, init_u4, init_u5));
    return rcpp_result_gen;
END_RCPP
}
// LA_ADMM_clusterglasso_export
Rcpp::List LA_ADMM_clusterglasso_export(const int& it_out, const int& it_in, const arma::mat& S, const arma::mat& W, const arma::mat& W_sparsity, const arma::mat& A, const arma::mat& Itilde, const arma::mat& A_for_C3, const arma::mat& A_for_T1, const arma::mat& T2, const arma::mat& T2_for_D, const double& lambda1, const double& lambda2, const double& eps_fusions, const double& rho, const bool& pendiag, const arma::mat& init_om, const arma::mat& init_u1, const arma::mat& init_u2, const arma::mat& init_c, const arma::mat& init_u3, const arma::mat& init_u4, const arma::mat& init_u5);
RcppExport SEXP _clusterglasso_LA_ADMM_clusterglasso_export(SEXP it_outSEXP, SEXP it_inSEXP, SEXP SSEXP, SEXP WSEXP, SEXP W_sparsitySEXP, SEXP ASEXP, SEXP ItildeSEXP, SEXP A_for_C3SEXP, SEXP A_for_T1SEXP, SEXP T2SEXP, SEXP T2_for_DSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP eps_fusionsSEXP, SEXP rhoSEXP, SEXP pendiagSEXP, SEXP init_omSEXP, SEXP init_u1SEXP, SEXP init_u2SEXP, SEXP init_cSEXP, SEXP init_u3SEXP, SEXP init_u4SEXP, SEXP init_u5SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type it_out(it_outSEXP);
    Rcpp::traits::input_parameter< const int& >::type it_in(it_inSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_sparsity(W_sparsitySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Itilde(ItildeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_C3(A_for_C3SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_for_T1(A_for_T1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type T2(T2SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type T2_for_D(T2_for_DSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< const double& >::type eps_fusions(eps_fusionsSEXP);
    Rcpp::traits::input_parameter< const double& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type pendiag(pendiagSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_om(init_omSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u1(init_u1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u2(init_u2SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_c(init_cSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u3(init_u3SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u4(init_u4SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type init_u5(init_u5SEXP);
    rcpp_result_gen = Rcpp::wrap(LA_ADMM_clusterglasso_export(it_out, it_in, S, W, W_sparsity, A, Itilde, A_for_C3, A_for_T1, T2, T2_for_D, lambda1, lambda2, eps_fusions, rho, pendiag, init_om, init_u1, init_u2, init_c, init_u3, init_u4, init_u5));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_clusterglasso_LA_ADMM_taglasso_export", (DL_FUNC) &_clusterglasso_LA_ADMM_taglasso_export, 21},
    {"_clusterglasso_refit_LA_ADMM_export", (DL_FUNC) &_clusterglasso_refit_LA_ADMM_export, 18},
    {"_clusterglasso_LA_ADMM_clusterglasso_export", (DL_FUNC) &_clusterglasso_LA_ADMM_clusterglasso_export, 23},
    {NULL, NULL, 0}
};

RcppExport void R_init_clusterglasso(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
